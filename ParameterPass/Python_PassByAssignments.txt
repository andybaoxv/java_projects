Arguments are passed by assignment. The rationale behind this is twofold:
1) the parameter passed in is actually a reference to an object (but the
reference is passed by value)
2) some data types are mutable, but others aren't

So:
    -- If you pass a mutable object into a method, the method gets a reference
    to that same object and you can mutate it to your heart's delight, but if
    you rebind the reference in the method, the outer scope will know nothing
    about it, and after you're done, the outer reference will still point at
    the original object.
    -- If you pass an immutable object to a method, you still can't rebind the
    outer reference, and you can't even mutate the object.

Read the following link
http://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference
